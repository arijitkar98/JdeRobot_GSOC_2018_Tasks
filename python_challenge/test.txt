To run tests:
python3 -m doctest -v test.txt

>>> import gameOfLife as l

# 1. Tests that board is formed properly

>>> board = {(1,0), (1,4), (3,2), (5,0), (5,4)}
>>> l.testDisplayConfig( board , 6)
 .  .  .  .  .  . 
 x  .  .  .  x  . 
 .  .  .  .  .  . 
 .  .  x  .  .  . 
 .  .  .  .  .  . 
 x  .  .  .  x  . 

# Testing all the rules

# 2. Tests that any live cell with fewer than two live neighbours dies, as if caused by underpopulation

>>> board = {(3,3), (2,3)}
>>> l.testDisplayConfig( board , 5)
 .  .  .  .  . 
 .  .  .  .  . 
 .  .  .  x  . 
 .  .  .  x  . 
 .  .  .  .  . 
>>> l.testDisplayConfig(l.checkBoardSize(l.getNextConfig(board), 5), 5)
 .  .  .  .  . 
 .  .  .  .  . 
 .  .  .  .  . 
 .  .  .  .  . 
 .  .  .  .  . 


# 3. Tests that any live cell with two or three live neighbours lives on to the next generation.

>>> board = {(4,3), (2,1), (3,2), (4,6), (2,6), (3,7), (4,8)}
>>> l.testDisplayConfig( board , 10)
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  x  .  .  .  .  x  .  .  . 
 .  .  x  .  .  .  .  x  .  . 
 .  .  .  x  .  .  x  .  x  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
>>> l.testDisplayConfig(l.checkBoardSize(l.getNextConfig(board), 10), 10)
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  x  .  .  .  x  x  .  . 
 .  .  .  .  .  .  .  x  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 

# 4. Tests that any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.

>>> board = {(4,6), (2,6), (3,7), (4,8)}
>>> l.testDisplayConfig( board , 10)
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  x  .  .  . 
 .  .  .  .  .  .  .  x  .  . 
 .  .  .  .  .  .  x  .  x  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
>>> l.testDisplayConfig(l.checkBoardSize(l.getNextConfig(board), 10), 10)
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  x  x  .  . 
 .  .  .  .  .  .  .  x  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 
 .  .  .  .  .  .  .  .  .  . 

# 5. Tests that any live cell with more than three live neighbours dies, as if by overpopulation.

>>> board = {(1,0), (1,4), (2,1),(2,3),(3,2),(4,1),(4,3),(5,0),(5,4)}
>>> l.testDisplayConfig( board , 6)
 .  .  .  .  .  . 
 x  .  .  .  x  . 
 .  x  .  x  .  . 
 .  .  x  .  .  . 
 .  x  .  x  .  . 
 x  .  .  .  x  . 
>>> l.testDisplayConfig(l.checkBoardSize(l.getNextConfig(board), 6), 6)
 .  .  .  .  .  . 
 .  .  .  .  .  . 
 .  x  x  x  .  . 
 .  x  .  x  .  . 
 .  x  x  x  .  . 
 .  .  .  .  .  . 
